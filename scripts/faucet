#!/bin/bash

# Faucet CLI Wrapper Script
# Provides colored output and convenient access to the faucet CLI

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Get the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

# Function to print colored output
print_info() {
    echo -e "${BLUE}ℹ️  $1${NC}"
}

print_success() {
    echo -e "${GREEN}✅ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}⚠️  $1${NC}"
}

print_error() {
    echo -e "${RED}❌ $1${NC}"
}

print_header() {
    echo -e "${PURPLE}🚰 Solana Token Faucet${NC}"
    echo -e "${CYAN}========================${NC}"
}

# Check if node is available
if ! command -v node &> /dev/null; then
    print_error "Node.js is not installed or not in PATH"
    exit 1
fi

# Check if the CLI script exists
CLI_SCRIPT="$SCRIPT_DIR/faucet-cli.js"
if [ ! -f "$CLI_SCRIPT" ]; then
    print_error "Faucet CLI script not found at $CLI_SCRIPT"
    exit 1
fi

# If no arguments provided, show help with header
if [ $# -eq 0 ]; then
    print_header
    echo
    node "$CLI_SCRIPT" --help
    echo
    print_info "Quick start examples:"
    echo -e "  ${CYAN}./scripts/faucet init -a ~/.config/solana/id.json${NC}"
    echo -e "  ${CYAN}./scripts/faucet request -m <MINT> -u ~/.config/solana/id.json${NC}"
    echo -e "  ${CYAN}./scripts/faucet info -m <MINT>${NC}"
    echo
    exit 0
fi

# Set working directory to project root
cd "$PROJECT_ROOT"

# Execute the CLI script with all arguments
node "$CLI_SCRIPT" "$@"

# Capture the exit code
EXIT_CODE=$?

# Provide additional feedback based on the command
if [ $EXIT_CODE -eq 0 ]; then
    case "$1" in
        "init")
            echo
            print_success "Faucet initialization completed!"
            print_info "Save the token mint address for future use"
            ;;
        "request")
            echo
            print_success "Token request completed!"
            print_info "Check your wallet to see the new tokens"
            ;;
        "info")
            echo
            print_info "Faucet information retrieved successfully"
            ;;
    esac
else
    echo
    print_error "Command failed with exit code $EXIT_CODE"
    print_info "Check the error message above for details"
fi

exit $EXIT_CODE
